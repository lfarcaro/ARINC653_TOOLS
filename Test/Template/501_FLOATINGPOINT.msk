MASK_START
SNIPPET_START CREATE_PARTITION_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START CREATE_PROCESS_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START GLOBAL_INCLUDES
// Test include
#include "test.h"
SNIPPET_END
SNIPPET_START MODULE_MODULE_DEFAULTPARTITION_INITIALIZATION
	// Sets LEDs pattern
	TEST_LED1_OFF();
	TEST_LED2_OFF();
SNIPPET_END
SNIPPET_START MODULE_MODULE_DEFAULTPARTITION_VARIABLES
	double DBL_VALUE1;
	double DBL_VALUE2;
	double DBL_VALUE3;
	portBYTE COMMAND;
SNIPPET_END
SNIPPET_START MODULE_MODULE_DESCRIPTION
SNIPPET_END
SNIPPET_START MODULE_MODULE_FUNCTIONS
SNIPPET_END
SNIPPET_START MODULE_MODULE_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START MODULE_MODULE_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START MODULE_MODULE_IDLEPARTITION_CODE
		DBL_VALUE1 = 50.0;
		DBL_VALUE1 += 1.0;
		DBL_VALUE1 -= 1.0;
		if (DBL_VALUE1 != 50.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		DBL_VALUE2 = 5.0;
		DBL_VALUE2 += 2.0;
		DBL_VALUE2 -= 2.0;
		if (DBL_VALUE2 != 5.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		DBL_VALUE3 = 10.0;
		DBL_VALUE3 += 3.0;
		DBL_VALUE3 -= 3.0;
		if (DBL_VALUE3 != 10.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		if ((DBL_VALUE1 / DBL_VALUE2) != 10.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		if (((DBL_VALUE1 / DBL_VALUE2) * DBL_VALUE3) != 100.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}

		// Handles reset command
		if ((CONSOLE_READ_BYTE(&COMMAND)) && (COMMAND == 0)) {
			PORT_RESTARTMODULE();
		}
SNIPPET_END
SNIPPET_START MODULE_MODULE_IDLEPARTITION_INITIALIZATION
SNIPPET_END
SNIPPET_START MODULE_MODULE_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DEFAULTPROCESS_VARIABLES
	double DBL_VALUE1;
	double DBL_VALUE2;
	double DBL_VALUE3;
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_IDLEPROCESS_CODE
		DBL_VALUE1 = 50.0;
		DBL_VALUE1 += 1.0;
		DBL_VALUE1 -= 1.0;
		if (DBL_VALUE1 != 50.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		DBL_VALUE2 = 5.0;
		DBL_VALUE2 += 2.0;
		DBL_VALUE2 -= 2.0;
		if (DBL_VALUE2 != 5.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		DBL_VALUE3 = 10.0;
		DBL_VALUE3 += 3.0;
		DBL_VALUE3 -= 3.0;
		if (DBL_VALUE3 != 10.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		if ((DBL_VALUE1 / DBL_VALUE2) != 10.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		if (((DBL_VALUE1 / DBL_VALUE2) * DBL_VALUE3) != 100.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_AFTER_SUSPENSION_CODE
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_BEFORE_SUSPENSION_CODE
		// Sets LEDs pattern for some time
		for (UI32_COUNTER1 = 0; UI32_COUNTER1 < TEST_COUNTER_TINYSMALL; UI32_COUNTER1++) {
			DBL_VALUE1 = 50.0;
			DBL_VALUE1 += 1.0;
			DBL_VALUE1 -= 1.0;
			if (DBL_VALUE1 != 50.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
			DBL_VALUE2 = 5.0;
			DBL_VALUE2 += 2.0;
			DBL_VALUE2 -= 2.0;
			if (DBL_VALUE2 != 5.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
			DBL_VALUE3 = 10.0;
			DBL_VALUE3 += 3.0;
			DBL_VALUE3 -= 3.0;
			if (DBL_VALUE3 != 10.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
			if ((DBL_VALUE1 / DBL_VALUE2) != 10.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
			if (((DBL_VALUE1 / DBL_VALUE2) * DBL_VALUE3) != 100.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
		}
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_VARIABLES
	portUINT32 UI32_COUNTER1 = 0;
	double DBL_VALUE1;
	double DBL_VALUE2;
	double DBL_VALUE3;
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_AFTER_SUSPENSION_CODE
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_BEFORE_SUSPENSION_CODE
		// Sets LEDs pattern for some time
		for (UI32_COUNTER1 = 0; UI32_COUNTER1 < TEST_COUNTER_TINYSMALL; UI32_COUNTER1++) {
			DBL_VALUE1 = 50.0;
			DBL_VALUE1 += 1.0;
			DBL_VALUE1 -= 1.0;
			if (DBL_VALUE1 != 50.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
			DBL_VALUE2 = 5.0;
			DBL_VALUE2 += 2.0;
			DBL_VALUE2 -= 2.0;
			if (DBL_VALUE2 != 5.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
			DBL_VALUE3 = 10.0;
			DBL_VALUE3 += 3.0;
			DBL_VALUE3 -= 3.0;
			if (DBL_VALUE3 != 10.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
			if ((DBL_VALUE1 / DBL_VALUE2) != 10.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
			if (((DBL_VALUE1 / DBL_VALUE2) * DBL_VALUE3) != 100.0) {
				while (true) {
					TEST_LED1_ON();
					TEST_LED2_ON();
				}
			}
		}
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_VARIABLES
	portUINT32 UI32_COUNTER1 = 0;
	double DBL_VALUE1;
	double DBL_VALUE2;
	double DBL_VALUE3;
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DEFAULTPROCESS_VARIABLES
	double DBL_VALUE1;
	double DBL_VALUE2;
	double DBL_VALUE3;
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_IDLEPROCESS_CODE
		DBL_VALUE1 = 50.0;
		DBL_VALUE1 += 1.0;
		DBL_VALUE1 -= 1.0;
		if (DBL_VALUE1 != 50.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		DBL_VALUE2 = 5.0;
		DBL_VALUE2 += 2.0;
		DBL_VALUE2 -= 2.0;
		if (DBL_VALUE2 != 5.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		DBL_VALUE3 = 10.0;
		DBL_VALUE3 += 3.0;
		DBL_VALUE3 -= 3.0;
		if (DBL_VALUE3 != 10.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		if ((DBL_VALUE1 / DBL_VALUE2) != 10.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		if (((DBL_VALUE1 / DBL_VALUE2) * DBL_VALUE3) != 100.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DEFAULTPROCESS_VARIABLES
	double DBL_VALUE1;
	double DBL_VALUE2;
	double DBL_VALUE3;
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_IDLEPROCESS_CODE
		DBL_VALUE1 = 50.0;
		DBL_VALUE1 += 1.0;
		DBL_VALUE1 -= 1.0;
		if (DBL_VALUE1 != 50.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		DBL_VALUE2 = 5.0;
		DBL_VALUE2 += 2.0;
		DBL_VALUE2 -= 2.0;
		if (DBL_VALUE2 != 5.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		DBL_VALUE3 = 10.0;
		DBL_VALUE3 += 3.0;
		DBL_VALUE3 -= 3.0;
		if (DBL_VALUE3 != 10.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		if ((DBL_VALUE1 / DBL_VALUE2) != 10.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
		if (((DBL_VALUE1 / DBL_VALUE2) * DBL_VALUE3) != 100.0) {
			while (true) {
				TEST_LED1_ON();
				TEST_LED2_ON();
			}
		}
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PERIODIC_WAIT_ERROR_HANDLING_CODE
			while (true) {
			}
SNIPPET_END
SNIPPET_START RUN_SYSTEM_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START SET_MODULE_MODE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START SET_PARTITION_MODE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START STARTUP_MODULE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START STARTUP_SYSTEM_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START START_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START SYSTEM_DEFAULTMODULE_INITIALIZATION
	// Starts up test
	TEST_STARTUP();
SNIPPET_END
SNIPPET_START SYSTEM_DEFAULTMODULE_VARIABLES
SNIPPET_END
SNIPPET_START SYSTEM_DESCRIPTION
SNIPPET_END
SNIPPET_START SYSTEM_FUNCTIONS
SNIPPET_END
SNIPPET_START SYSTEM_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START SYSTEM_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START SYSTEM_INCLUDES
SNIPPET_END
MASK_END
