MASK_START
SNIPPET_START CREATE_PARTITION_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START CREATE_PROCESS_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START GLOBAL_INCLUDES
// Test include
#include "test.h"
SNIPPET_END
SNIPPET_START MODULE_MODULE_DEFAULTPARTITION_INITIALIZATION
SNIPPET_END
SNIPPET_START MODULE_MODULE_DEFAULTPARTITION_VARIABLES
	PROCESS_ID_TYPE PROCESS_ID;
	portBYTE COMMAND;
SNIPPET_END
SNIPPET_START MODULE_MODULE_DESCRIPTION
SNIPPET_END
SNIPPET_START MODULE_MODULE_FUNCTIONS
SNIPPET_END
SNIPPET_START MODULE_MODULE_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START MODULE_MODULE_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START MODULE_MODULE_IDLEPARTITION_CODE
		// Sets LEDs pattern
		TEST_LED1_OFF();
		TEST_LED2_OFF();

		// Gets PROCESS1 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS1", &PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != INVALID_MODE) {
			while (true) {
			}
		}

		// Gets PROCESS2 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS2", &PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != INVALID_MODE) {
			while (true) {
			}
		}

		// Handles reset command
		if ((CONSOLE_READ_BYTE(&COMMAND)) && (COMMAND == 0)) {
			PORT_RESTARTMODULE();
		}
SNIPPET_END
SNIPPET_START MODULE_MODULE_IDLEPARTITION_INITIALIZATION
SNIPPET_END
SNIPPET_START MODULE_MODULE_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DEFAULTPROCESS_VARIABLES
	PROCESS_ID_TYPE PROCESS1_PROCESS_ID;
	PROCESS_ID_TYPE PROCESS2_PROCESS_ID;
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_IDLEPROCESS_CODE
		// Sets LEDs pattern
		TEST_LED1_ON();
		TEST_LED2_OFF();

		// Gets PROCESS1 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS1", &PROCESS1_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != NO_ERROR) {
			while (true) {
			}
		}
		if (PROCESS1_PROCESS_ID != 0) {
			while (true) {
			}
		}

		// Gets PROCESS2 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS2", &PROCESS2_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != NO_ERROR) {
			while (true) {
			}
		}
		if (PROCESS2_PROCESS_ID != 1) {
			while (true) {
			}
		}
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_AFTER_SUSPENSION_CODE
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_BEFORE_SUSPENSION_CODE
		// Sets LEDs pattern
		TEST_LED1_ON();
		TEST_LED2_OFF();

		// Gets PROCESS1 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS1", &PROCESS1_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != NO_ERROR) {
			while (true) {
			}
		}
		if (PROCESS1_PROCESS_ID != 0) {
			while (true) {
			}
		}

		// Gets PROCESS2 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS2", &PROCESS2_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != NO_ERROR) {
			while (true) {
			}
		}
		if (PROCESS2_PROCESS_ID != 1) {
			while (true) {
			}
		}
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_VARIABLES
	PROCESS_ID_TYPE PROCESS1_PROCESS_ID;
	PROCESS_ID_TYPE PROCESS2_PROCESS_ID;
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_AFTER_SUSPENSION_CODE
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_BEFORE_SUSPENSION_CODE
		// Sets LEDs pattern
		TEST_LED1_OFF();
		TEST_LED2_ON();

		// Gets PROCESS1 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS1", &PROCESS1_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != NO_ERROR) {
			while (true) {
			}
		}
		if (PROCESS1_PROCESS_ID != 0) {
			while (true) {
			}
		}

		// Gets PROCESS2 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS2", &PROCESS2_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != NO_ERROR) {
			while (true) {
			}
		}
		if (PROCESS2_PROCESS_ID != 1) {
			while (true) {
			}
		}
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_VARIABLES
	PROCESS_ID_TYPE PROCESS1_PROCESS_ID;
	PROCESS_ID_TYPE PROCESS2_PROCESS_ID;
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DEFAULTPROCESS_VARIABLES
	PROCESS_ID_TYPE PROCESS1_PROCESS_ID;
	PROCESS_ID_TYPE PROCESS2_PROCESS_ID;
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_IDLEPROCESS_CODE
		// Sets LEDs pattern
		TEST_LED1_OFF();
		TEST_LED2_ON();

		// Gets PROCESS1 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS1", &PROCESS1_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != INVALID_CONFIG) {
			while (true) {
			}
		}

		// Gets PROCESS2 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS2", &PROCESS2_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != INVALID_CONFIG) {
			while (true) {
			}
		}
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DEFAULTPROCESS_VARIABLES
	PROCESS_ID_TYPE PROCESS1_PROCESS_ID;
	PROCESS_ID_TYPE PROCESS2_PROCESS_ID;
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_IDLEPROCESS_CODE
		// Sets LEDs pattern
		TEST_LED1_ON();
		TEST_LED2_ON();

		// Gets PROCESS1 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS1", &PROCESS1_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != INVALID_CONFIG) {
			while (true) {
			}
		}

		// Gets PROCESS2 process identifier
		GET_PROCESS_ID((PROCESS_NAME_TYPE) "PROCESS2", &PROCESS2_PROCESS_ID, &RETURN_CODE);
		if (RETURN_CODE != INVALID_CONFIG) {
			while (true) {
			}
		}
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PERIODIC_WAIT_ERROR_HANDLING_CODE
			while (true) {
			}
SNIPPET_END
SNIPPET_START RUN_SYSTEM_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START SET_MODULE_MODE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START SET_PARTITION_MODE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START STARTUP_MODULE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START STARTUP_SYSTEM_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START START_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START SYSTEM_DEFAULTMODULE_INITIALIZATION
	// Starts up test
	TEST_STARTUP();
SNIPPET_END
SNIPPET_START SYSTEM_DEFAULTMODULE_VARIABLES
SNIPPET_END
SNIPPET_START SYSTEM_DESCRIPTION
SNIPPET_END
SNIPPET_START SYSTEM_FUNCTIONS
SNIPPET_END
SNIPPET_START SYSTEM_GLOBAL_DEFINITIONS
SNIPPET_END
SNIPPET_START SYSTEM_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START SYSTEM_INCLUDES
SNIPPET_END
MASK_END
